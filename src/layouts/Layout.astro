---
import LanguageSwitch from '../components/LanguageSwitch.astro'
import { languages } from '../i18n/languages'
import Footer from '../components/Footer.astro'

interface Props {
  title?: string
  description?: string
}

const { title = 'Is Working Now - Global Work Hours Checker', description = 'Instantly check if countries around the world are currently in their working hours. Real-time global business hours tracker.' } = Astro.props
const currentLang = Astro.url.pathname.split('/')[1] || 'en'
---

<!doctype html>
<html lang={currentLang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content="isworkingnow, is working now, work time checker, global working hours, real-time work status, international business hours, global time zones, business hours by country, world time zones, working time by country, global business schedule, international work hours, business time converter, worldwide office hours, global work schedule, current work status" />
    <meta name="robots" content="index, follow" />
    <meta name="author" content="IsWorkingNow" />
    <link rel="canonical" href={`https://isworkingnow.com${Astro.url.pathname}`} />
    <meta name="google-site-verification" content="" />
    <meta name="baidu-site-verification" content="" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={`${Astro.url.origin}/og-image.png`} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={`https://isworkingnow.com${Astro.url.pathname}`} />
    <meta property="og:site_name" content="IsWorkingNow" />
    <meta property="og:locale" content={currentLang} />
    <meta property="og:image" content={`${Astro.url.origin}/og-image.png`} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    {languages.map((lang) => (
      <link rel="alternate" hreflang={lang.code} href={`${Astro.url.origin}/${lang.code}`} />
    ))}
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebApplication",
        "name": title,
        "description": description,
        "url": Astro.url.href,
        "applicationCategory": "BusinessApplication",
        "operatingSystem": "All",
        "inLanguage": currentLang
      })}
    </script>
  </head>
  <body class="min-h-screen bg-white text-gray-900 dark:bg-dark-primary dark:text-dark-text transition-colors duration-200">
    <LanguageSwitch currentLang={currentLang} />
    <slot />
    <Footer currentLang={currentLang} />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script>
  // 初始化主题
  const initTheme = () => {
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark')
    } else {
      document.documentElement.classList.remove('dark')
    }
  }

  // 在页面加载时初始化主题
  document.addEventListener('DOMContentLoaded', initTheme)

  // 在页面可见时重新检查主题
  document.addEventListener('visibilitychange', () => {
    if (document.visibilityState === 'visible') {
      initTheme()
    }
  })
</script>
